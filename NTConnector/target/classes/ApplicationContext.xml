<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:util="http://www.springframework.org/schema/util"
 	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
 	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/data/mongo	http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd 
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/task   
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />
	<!-- 缓存注解驱动 -->
	<context:component-scan base-package="com.easy.ntdb.dao"/>
	<context:component-scan base-package="com.easy.ntconnector.service"/>
	<!-- jdbc.properties文件路径  -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations"  value="classpath:/jdbc.properties" />
</bean>
	
	<!-- 注册单个MongoDB实例连接信息 -->
	<!--
	connections-per-host：单个主机连接到mongo实例允许的最大连接数。  
	threadsAllowedToBlockForConnectionMultiplier：这个参数是跟connectionsPerHost配套的，当连接数超过connectionsPerHost的时候，需要建立新的连接，连接请求会被阻塞，这个参数就代表允许阻塞请求的最大值
	autoConnectRetry：自动重连
	connectTimeout：建立链接的超时时间。默认为0，代表永不超时。
	maxWaitTime：线程等待链接可用的最长时间，ms单位，默认120,000，两分钟。
	socketTimeout：执行io操作的超时时间，默认为0，代表不超时。
    socketKeepAlive：为防火墙设置的，保证socket存活。默认false。
	-->
	<mongo:mongo id="mongo" host="${mongo.ip}" port="${mongo.port}"> 
	      <mongo:options connections-per-host="200"  
            threads-allowed-to-block-for-connection-multiplier="10"  
            auto-connect-retry="true"
            connect-timeout="1000"
            max-wait-time="1500" 
            socket-keep-alive="true" 
            socket-timeout="10000"
             />
	</mongo:mongo>
	
	<bean id="userCredentials" class="org.springframework.data.authentication.UserCredentials">
		<constructor-arg name="username"  value="${mongo.user}"/>
		<constructor-arg name="password"  value="${mongo.password}"/>
	</bean>

	<!-- Spring Data管理MongoDB操作 -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongo"/>
		<constructor-arg value="${mongo.db}"/>
		<constructor-arg ref="userCredentials"/>
	</bean>

<bean  
        id="jedisPoolConfig"  
        class="redis.clients.jedis.JedisPoolConfig"  
    >  
        <property  
            name="maxTotal"  
            value="${redis.pool.maxActive}" />  
        <property  
            name="maxIdle"  
            value="${redis.pool.maxIdle}" />  
        <property  
            name="maxWaitMillis"  
            value="${redis.pool.maxWait}" />  
        <property  
            name="testOnBorrow"  
            value="${redis.pool.testOnBorrow}" />  
    </bean>  
    
	<bean  
    id="jedisConnectionFactory"  
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
>  
    <property  
        name="hostName"  
        value="${redis.ip}" />  
    <property  
        name="port"  
        value="${redis.port}" /> 
     <property  
        name="password"  
        value="${redis.password}" />    
    
    <property  
        name="poolConfig"  
        ref="jedisPoolConfig" />  
</bean>  
   
<bean class="org.springframework.data.redis.core.StringRedisTemplate" id="stringRedisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>

<bean class="org.springframework.data.redis.core.RedisTemplate" id="redisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>

</beans>